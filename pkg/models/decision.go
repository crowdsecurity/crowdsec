// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Decision Decision
//
// swagger:model Decision
type Decision struct {

	// (only relevant for GET ops) the unique id
	DecisionID string `json:"decision_id,omitempty"`

	// duration
	Duration string `json:"duration,omitempty"`

	// (only relevant for GET ops) when the target is an IP or range, its numeric representation
	EndIP int64 `json:"end_ip,omitempty"`

	// the origin of the decision : cscli, crowdsec
	Origin string `json:"origin,omitempty"`

	// scenario
	Scenario string `json:"scenario,omitempty"`

	// the scope of decision : does it apply to an IP, a range, a username, etc
	Scope string `json:"scope,omitempty"`

	// (only relevant for GET ops) when the target is an IP or range, its numeric representation
	StartIP int64 `json:"start_ip,omitempty"`

	// the target of the decision : an IP, a range, a username, etc
	Target string `json:"target,omitempty"`

	// the type of decision, might be 'ban', 'captcha' or something custom. Ignored when watcher (cscli/crowdsec) is pushing to APIL.
	Type string `json:"type,omitempty"`
}

// Validate validates this decision
func (m *Decision) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Decision) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Decision) UnmarshalBinary(b []byte) error {
	var res Decision
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
