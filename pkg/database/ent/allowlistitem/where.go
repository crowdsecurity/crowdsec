// Code generated by ent, DO NOT EDIT.

package allowlistitem

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/crowdsecurity/crowdsec/pkg/database/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldUpdatedAt, v))
}

// ExpiresAt applies equality check predicate on the "expires_at" field. It's identical to ExpiresAtEQ.
func ExpiresAt(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldExpiresAt, v))
}

// Comment applies equality check predicate on the "comment" field. It's identical to CommentEQ.
func Comment(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldComment, v))
}

// Value applies equality check predicate on the "value" field. It's identical to ValueEQ.
func Value(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldValue, v))
}

// StartIP applies equality check predicate on the "start_ip" field. It's identical to StartIPEQ.
func StartIP(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldStartIP, v))
}

// EndIP applies equality check predicate on the "end_ip" field. It's identical to EndIPEQ.
func EndIP(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldEndIP, v))
}

// StartSuffix applies equality check predicate on the "start_suffix" field. It's identical to StartSuffixEQ.
func StartSuffix(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldStartSuffix, v))
}

// EndSuffix applies equality check predicate on the "end_suffix" field. It's identical to EndSuffixEQ.
func EndSuffix(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldEndSuffix, v))
}

// IPSize applies equality check predicate on the "ip_size" field. It's identical to IPSizeEQ.
func IPSize(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldIPSize, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLTE(FieldUpdatedAt, v))
}

// ExpiresAtEQ applies the EQ predicate on the "expires_at" field.
func ExpiresAtEQ(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldExpiresAt, v))
}

// ExpiresAtNEQ applies the NEQ predicate on the "expires_at" field.
func ExpiresAtNEQ(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNEQ(FieldExpiresAt, v))
}

// ExpiresAtIn applies the In predicate on the "expires_at" field.
func ExpiresAtIn(vs ...time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIn(FieldExpiresAt, vs...))
}

// ExpiresAtNotIn applies the NotIn predicate on the "expires_at" field.
func ExpiresAtNotIn(vs ...time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotIn(FieldExpiresAt, vs...))
}

// ExpiresAtGT applies the GT predicate on the "expires_at" field.
func ExpiresAtGT(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGT(FieldExpiresAt, v))
}

// ExpiresAtGTE applies the GTE predicate on the "expires_at" field.
func ExpiresAtGTE(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGTE(FieldExpiresAt, v))
}

// ExpiresAtLT applies the LT predicate on the "expires_at" field.
func ExpiresAtLT(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLT(FieldExpiresAt, v))
}

// ExpiresAtLTE applies the LTE predicate on the "expires_at" field.
func ExpiresAtLTE(v time.Time) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLTE(FieldExpiresAt, v))
}

// ExpiresAtIsNil applies the IsNil predicate on the "expires_at" field.
func ExpiresAtIsNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIsNull(FieldExpiresAt))
}

// ExpiresAtNotNil applies the NotNil predicate on the "expires_at" field.
func ExpiresAtNotNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotNull(FieldExpiresAt))
}

// CommentEQ applies the EQ predicate on the "comment" field.
func CommentEQ(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldComment, v))
}

// CommentNEQ applies the NEQ predicate on the "comment" field.
func CommentNEQ(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNEQ(FieldComment, v))
}

// CommentIn applies the In predicate on the "comment" field.
func CommentIn(vs ...string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIn(FieldComment, vs...))
}

// CommentNotIn applies the NotIn predicate on the "comment" field.
func CommentNotIn(vs ...string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotIn(FieldComment, vs...))
}

// CommentGT applies the GT predicate on the "comment" field.
func CommentGT(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGT(FieldComment, v))
}

// CommentGTE applies the GTE predicate on the "comment" field.
func CommentGTE(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGTE(FieldComment, v))
}

// CommentLT applies the LT predicate on the "comment" field.
func CommentLT(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLT(FieldComment, v))
}

// CommentLTE applies the LTE predicate on the "comment" field.
func CommentLTE(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLTE(FieldComment, v))
}

// CommentContains applies the Contains predicate on the "comment" field.
func CommentContains(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldContains(FieldComment, v))
}

// CommentHasPrefix applies the HasPrefix predicate on the "comment" field.
func CommentHasPrefix(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldHasPrefix(FieldComment, v))
}

// CommentHasSuffix applies the HasSuffix predicate on the "comment" field.
func CommentHasSuffix(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldHasSuffix(FieldComment, v))
}

// CommentIsNil applies the IsNil predicate on the "comment" field.
func CommentIsNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIsNull(FieldComment))
}

// CommentNotNil applies the NotNil predicate on the "comment" field.
func CommentNotNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotNull(FieldComment))
}

// CommentEqualFold applies the EqualFold predicate on the "comment" field.
func CommentEqualFold(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEqualFold(FieldComment, v))
}

// CommentContainsFold applies the ContainsFold predicate on the "comment" field.
func CommentContainsFold(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldContainsFold(FieldComment, v))
}

// ValueEQ applies the EQ predicate on the "value" field.
func ValueEQ(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldValue, v))
}

// ValueNEQ applies the NEQ predicate on the "value" field.
func ValueNEQ(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNEQ(FieldValue, v))
}

// ValueIn applies the In predicate on the "value" field.
func ValueIn(vs ...string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIn(FieldValue, vs...))
}

// ValueNotIn applies the NotIn predicate on the "value" field.
func ValueNotIn(vs ...string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotIn(FieldValue, vs...))
}

// ValueGT applies the GT predicate on the "value" field.
func ValueGT(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGT(FieldValue, v))
}

// ValueGTE applies the GTE predicate on the "value" field.
func ValueGTE(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGTE(FieldValue, v))
}

// ValueLT applies the LT predicate on the "value" field.
func ValueLT(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLT(FieldValue, v))
}

// ValueLTE applies the LTE predicate on the "value" field.
func ValueLTE(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLTE(FieldValue, v))
}

// ValueContains applies the Contains predicate on the "value" field.
func ValueContains(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldContains(FieldValue, v))
}

// ValueHasPrefix applies the HasPrefix predicate on the "value" field.
func ValueHasPrefix(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldHasPrefix(FieldValue, v))
}

// ValueHasSuffix applies the HasSuffix predicate on the "value" field.
func ValueHasSuffix(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldHasSuffix(FieldValue, v))
}

// ValueEqualFold applies the EqualFold predicate on the "value" field.
func ValueEqualFold(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEqualFold(FieldValue, v))
}

// ValueContainsFold applies the ContainsFold predicate on the "value" field.
func ValueContainsFold(v string) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldContainsFold(FieldValue, v))
}

// StartIPEQ applies the EQ predicate on the "start_ip" field.
func StartIPEQ(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldStartIP, v))
}

// StartIPNEQ applies the NEQ predicate on the "start_ip" field.
func StartIPNEQ(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNEQ(FieldStartIP, v))
}

// StartIPIn applies the In predicate on the "start_ip" field.
func StartIPIn(vs ...int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIn(FieldStartIP, vs...))
}

// StartIPNotIn applies the NotIn predicate on the "start_ip" field.
func StartIPNotIn(vs ...int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotIn(FieldStartIP, vs...))
}

// StartIPGT applies the GT predicate on the "start_ip" field.
func StartIPGT(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGT(FieldStartIP, v))
}

// StartIPGTE applies the GTE predicate on the "start_ip" field.
func StartIPGTE(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGTE(FieldStartIP, v))
}

// StartIPLT applies the LT predicate on the "start_ip" field.
func StartIPLT(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLT(FieldStartIP, v))
}

// StartIPLTE applies the LTE predicate on the "start_ip" field.
func StartIPLTE(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLTE(FieldStartIP, v))
}

// StartIPIsNil applies the IsNil predicate on the "start_ip" field.
func StartIPIsNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIsNull(FieldStartIP))
}

// StartIPNotNil applies the NotNil predicate on the "start_ip" field.
func StartIPNotNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotNull(FieldStartIP))
}

// EndIPEQ applies the EQ predicate on the "end_ip" field.
func EndIPEQ(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldEndIP, v))
}

// EndIPNEQ applies the NEQ predicate on the "end_ip" field.
func EndIPNEQ(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNEQ(FieldEndIP, v))
}

// EndIPIn applies the In predicate on the "end_ip" field.
func EndIPIn(vs ...int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIn(FieldEndIP, vs...))
}

// EndIPNotIn applies the NotIn predicate on the "end_ip" field.
func EndIPNotIn(vs ...int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotIn(FieldEndIP, vs...))
}

// EndIPGT applies the GT predicate on the "end_ip" field.
func EndIPGT(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGT(FieldEndIP, v))
}

// EndIPGTE applies the GTE predicate on the "end_ip" field.
func EndIPGTE(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGTE(FieldEndIP, v))
}

// EndIPLT applies the LT predicate on the "end_ip" field.
func EndIPLT(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLT(FieldEndIP, v))
}

// EndIPLTE applies the LTE predicate on the "end_ip" field.
func EndIPLTE(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLTE(FieldEndIP, v))
}

// EndIPIsNil applies the IsNil predicate on the "end_ip" field.
func EndIPIsNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIsNull(FieldEndIP))
}

// EndIPNotNil applies the NotNil predicate on the "end_ip" field.
func EndIPNotNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotNull(FieldEndIP))
}

// StartSuffixEQ applies the EQ predicate on the "start_suffix" field.
func StartSuffixEQ(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldStartSuffix, v))
}

// StartSuffixNEQ applies the NEQ predicate on the "start_suffix" field.
func StartSuffixNEQ(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNEQ(FieldStartSuffix, v))
}

// StartSuffixIn applies the In predicate on the "start_suffix" field.
func StartSuffixIn(vs ...int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIn(FieldStartSuffix, vs...))
}

// StartSuffixNotIn applies the NotIn predicate on the "start_suffix" field.
func StartSuffixNotIn(vs ...int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotIn(FieldStartSuffix, vs...))
}

// StartSuffixGT applies the GT predicate on the "start_suffix" field.
func StartSuffixGT(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGT(FieldStartSuffix, v))
}

// StartSuffixGTE applies the GTE predicate on the "start_suffix" field.
func StartSuffixGTE(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGTE(FieldStartSuffix, v))
}

// StartSuffixLT applies the LT predicate on the "start_suffix" field.
func StartSuffixLT(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLT(FieldStartSuffix, v))
}

// StartSuffixLTE applies the LTE predicate on the "start_suffix" field.
func StartSuffixLTE(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLTE(FieldStartSuffix, v))
}

// StartSuffixIsNil applies the IsNil predicate on the "start_suffix" field.
func StartSuffixIsNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIsNull(FieldStartSuffix))
}

// StartSuffixNotNil applies the NotNil predicate on the "start_suffix" field.
func StartSuffixNotNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotNull(FieldStartSuffix))
}

// EndSuffixEQ applies the EQ predicate on the "end_suffix" field.
func EndSuffixEQ(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldEndSuffix, v))
}

// EndSuffixNEQ applies the NEQ predicate on the "end_suffix" field.
func EndSuffixNEQ(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNEQ(FieldEndSuffix, v))
}

// EndSuffixIn applies the In predicate on the "end_suffix" field.
func EndSuffixIn(vs ...int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIn(FieldEndSuffix, vs...))
}

// EndSuffixNotIn applies the NotIn predicate on the "end_suffix" field.
func EndSuffixNotIn(vs ...int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotIn(FieldEndSuffix, vs...))
}

// EndSuffixGT applies the GT predicate on the "end_suffix" field.
func EndSuffixGT(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGT(FieldEndSuffix, v))
}

// EndSuffixGTE applies the GTE predicate on the "end_suffix" field.
func EndSuffixGTE(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGTE(FieldEndSuffix, v))
}

// EndSuffixLT applies the LT predicate on the "end_suffix" field.
func EndSuffixLT(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLT(FieldEndSuffix, v))
}

// EndSuffixLTE applies the LTE predicate on the "end_suffix" field.
func EndSuffixLTE(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLTE(FieldEndSuffix, v))
}

// EndSuffixIsNil applies the IsNil predicate on the "end_suffix" field.
func EndSuffixIsNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIsNull(FieldEndSuffix))
}

// EndSuffixNotNil applies the NotNil predicate on the "end_suffix" field.
func EndSuffixNotNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotNull(FieldEndSuffix))
}

// IPSizeEQ applies the EQ predicate on the "ip_size" field.
func IPSizeEQ(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldEQ(FieldIPSize, v))
}

// IPSizeNEQ applies the NEQ predicate on the "ip_size" field.
func IPSizeNEQ(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNEQ(FieldIPSize, v))
}

// IPSizeIn applies the In predicate on the "ip_size" field.
func IPSizeIn(vs ...int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIn(FieldIPSize, vs...))
}

// IPSizeNotIn applies the NotIn predicate on the "ip_size" field.
func IPSizeNotIn(vs ...int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotIn(FieldIPSize, vs...))
}

// IPSizeGT applies the GT predicate on the "ip_size" field.
func IPSizeGT(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGT(FieldIPSize, v))
}

// IPSizeGTE applies the GTE predicate on the "ip_size" field.
func IPSizeGTE(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldGTE(FieldIPSize, v))
}

// IPSizeLT applies the LT predicate on the "ip_size" field.
func IPSizeLT(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLT(FieldIPSize, v))
}

// IPSizeLTE applies the LTE predicate on the "ip_size" field.
func IPSizeLTE(v int64) predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldLTE(FieldIPSize, v))
}

// IPSizeIsNil applies the IsNil predicate on the "ip_size" field.
func IPSizeIsNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldIsNull(FieldIPSize))
}

// IPSizeNotNil applies the NotNil predicate on the "ip_size" field.
func IPSizeNotNil() predicate.AllowListItem {
	return predicate.AllowListItem(sql.FieldNotNull(FieldIPSize))
}

// HasAllowlist applies the HasEdge predicate on the "allowlist" edge.
func HasAllowlist() predicate.AllowListItem {
	return predicate.AllowListItem(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, AllowlistTable, AllowlistPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasAllowlistWith applies the HasEdge predicate on the "allowlist" edge with a given conditions (other predicates).
func HasAllowlistWith(preds ...predicate.AllowList) predicate.AllowListItem {
	return predicate.AllowListItem(func(s *sql.Selector) {
		step := newAllowlistStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AllowListItem) predicate.AllowListItem {
	return predicate.AllowListItem(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AllowListItem) predicate.AllowListItem {
	return predicate.AllowListItem(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AllowListItem) predicate.AllowListItem {
	return predicate.AllowListItem(sql.NotPredicates(p))
}
