---
# Main block defining all service detection rules
detect:

  # Detect apache2 on Debian-based systems
  apache2-systemd-deb:
    # all conditions must evaluate to true
    when:
      # check if apache2 is in "systemctl list-unit-files --type=service"
      - Systemd.UnitInstalled("apache2.service")
      # broad distribution category (use Host.Platform to disambiguate "ubuntu" from "debian")
      # full list at https://github.com/shirou/gopsutil/blob/master/host/host_linux.go
      - Host.PlatformFamily == "debian"
    hub_spec:
      # If the rules match, install the following items
      collections:
        - crowdsecurity/apache2
    acquisition_spec:
      # If the rules match, generate an acquisition file named "setup.apache2.yaml"
      filename: apache2.yaml
      datasource:
        source: file
        filenames:
          - /var/log/apache2/*.log
        labels:
          type: apache2

  # Detect apache2 on rpm-based systems
  apache2-systemd-rpm:
    when:
      - Systemd.UnitInstalled("httpd.service")
      - Host.PlatformFamily in ['rhel', 'fedora']
    hub_spec:
      collections:
        - crowdsecurity/apache2
    acquisition_spec:
      filename: apache2.yaml
      datasource:
        source: file
        filenames:
          - /var/log/httpd/*.log
        labels:
          type: apache2

  # Asterisk PBX
  asterisk-systemd:
    when:
      - Systemd.UnitInstalled("asterisk.service")
    hub_spec:
      collections:
        - crowdsecurity/asterisk
    acquisition_spec:
      filename: asterisk.yaml
      datasource:
        source: file
        labels:
          type: asterisk
        filenames:
          - /var/log/asterisk/*.log

  # Caddy web server
  caddy-systemd:
    when:
      - Systemd.UnitInstalled("caddy.service")
    hub_spec:
      collections:
        - crowdsecurity/caddy
    acquisition_spec:
      filename: caddy.yaml
      datasource:
        source: file
        labels:
          type: caddy
        filenames:
          - /var/log/caddy/*.log

  # Dovecot IMAP/POP3 server
  dovecot-systemd:
    when:
      - Systemd.UnitInstalled("dovecot.service")
    hub_spec:
      collections:
        - crowdsecurity/dovecot
    acquisition_spec:
      filename: dovecot.yaml
      datasource:
        source: file
        labels:
          type: syslog
        filenames:
          - /var/log/mail.log

  # Gitea Git server
  gitea-systemd:
    when:
      - Systemd.UnitInstalled("gitea.service")
    hub_spec:
      collections:
        - crowdsecurity/gitea
    acquisition_spec:
      filename: gitea.yaml
      datasource:
        source: file
        labels:
          type: gitea
        filenames:
          - /var/log/gitea.log

  # HAProxy load balancer
  haproxy-systemd:
    when:
      - Systemd.UnitInstalled("haproxy.service")
    hub_spec:
      collections:
        - crowdsecurity/haproxy
    acquisition_spec:
      filename: haproxy.yaml
      datasource:
        source: file
        labels:
          type: haproxy
        filenames:
          - /var/log/haproxy/*.log

  # MariaDB server
  mariadb-systemd:
    when:
      - Systemd.UnitInstalled("mariadb.service")
    hub_spec:
      collections:
        - crowdsecurity/mariadb
    acquisition_spec:
      filename: mariadb.yaml
      datasource:
        source: file
        labels:
          type: mysql
        filenames:
          - /var/log/mysql/error.log

  # MySQL server
  mysql-systemd:
    when:
      - Systemd.UnitInstalled("mysql.service")
    hub_spec:
      collections:
        - crowdsecurity/mysql
    acquisition_spec:
      filename: mysql.yaml
      datasource:
        source: file
        labels:
          type: mysql
        filenames:
          - /var/log/mysql/error.log

  # Nginx
  nginx-systemd:
    when:
      # if nginx is still detected after removing the "nginx" package,
      # remove the nginx-common package too.
      - Systemd.UnitInstalled("nginx.service")
    hub_spec:
      collections:
        - crowdsecurity/nginx
    acquisition_spec:
      filename: nginx.yaml
      datasource:
        source: file
        labels:
          type: nginx
        filenames:
          - /var/log/nginx/*.log

  # OpenResty (nginx distribution)
  openresty-systemd:
    when:
      - Systemd.UnitInstalled("openresty.service")
    hub_spec:
      collections:
        - crowdsecurity/nginx
    acquisition_spec:
      filename: openresty.yaml
      datasource:
        source: file
        labels:
          type: nginx
        filenames:
          - /usr/local/openresty/nginx/logs/*.log

  # PostgreSQL (deb)
  pgsql-systemd-deb:
    when:
      - Systemd.UnitInstalled("postgresql.service")
      - Host.PlatformFamily == "debian"
    hub_spec:
      collections:
        - crowdsecurity/pgsql
    acquisition_spec:
      filename: pgsql.yaml
      datasource:
        source: file
        labels:
          type: postgres
        filenames:
          - /var/log/postgresql/*.log

  # PostgreSQL (rpm)
  pgsql-systemd-rpm:
    when:
      - Systemd.UnitInstalled("postgresql.service")
      - Host.PlatformFamily in ['rhel', 'fedora']
    hub_spec:
      collections:
        - crowdsecurity/pgsql
    acquisition_spec:
      filename: pgsql.yaml
      datasource:
        source: file
        labels:
          type: postgres
        filenames:
          - /var/lib/pgsql/data/log/*.log

  # Postfix mail server
  postfix-systemd:
    when:
      - Systemd.UnitInstalled("postfix.service")
    hub_spec:
      collections:
        - crowdsecurity/postfix
    acquisition_spec:
      filename: postfix.yaml
      datasource:
        source: file
        labels:
          type: syslog
        filenames:
          - /var/log/mail.log
          - /var/log/maillog

  # ProFTPD FTP server
  proftpd-systemd:
    when:
      - Systemd.UnitInstalled("proftpd.service")
    hub_spec:
      collections:
        - crowdsecurity/proftpd
    acquisition_spec:
      filename: proftpd.yaml
      datasource:
        source: file
        labels:
          type: proftpd
        filenames:
          - /var/log/proftpd/*.log

  # Pure-FTPd server
  pureftpd-systemd:
    when:
      - Systemd.UnitInstalled("pure-ftpd.service")
    hub_spec:
      collections:
        - fulljackz/pureftpd
    acquisition_spec:
      filename: pureftpd.yaml
      datasource:
        source: file
        labels:
          type: pure-ftpd
        filenames:
          - /var/log/pure-ftpd/*.log

  # Samba server
  smb-systemd:
    when:
      # deb -> smbd.service
      # rpm -> smb.service
      - Systemd.UnitInstalled("smbd.service") or Systemd.UnitInstalled("smb.service")
    hub_spec:
      collections:
        - crowdsecurity/smb
    acquisition_spec:
      filename: smb.yaml
      datasource:
        source: file
        labels:
          type: smb
        filenames:
          - /var/log/samba*.log

  ###
  # SSH daemon
  #

  ssh-systemd-file:
    when:
      - Systemd.UnitInstalled("ssh.service") or Systemd.UnitInstalled("ssh.socket")
      - Path.Exists("/var/log/auth.log")
    hub_spec:
      collections:
        - crowdsecurity/sshd
    acquisition_spec:
      filename: sshd.yaml
      datasource:
        source: file
        labels:
          type: syslog
        filenames:
          - /var/log/auth.log
          - /var/log/sshd.log
          - /var/log/secure

  sshd-systemd-file:
    when:
      - Systemd.UnitInstalled("sshd.service") or Systemd.UnitInstalled("sshd.socket")
      - Path.Exists("/var/log/auth.log")
    hub_spec:
      collections:
        - crowdsecurity/sshd
    acquisition_spec:
      filename: sshd.yaml
      datasource:
        source: file
        labels:
          type: syslog
        filenames:
          - /var/log/auth.log
          - /var/log/sshd.log
          - /var/log/secure

  ssh-systemd-journalctl:
    when:
      - Systemd.UnitInstalled("ssh.service") or Systemd.UnitInstalled("ssh.socket")
      - not Path.Exists("/var/log/auth.log")
    hub_spec:
      collections:
        - crowdsecurity/sshd
    acquisition_spec:
      filename: sshd.yaml
      datasource:
        source: journalctl
        labels:
          type: syslog
        journalctl_filter:
          - "_SYSTEMD_UNIT=ssh.service"

  sshd-systemd-journalctl:
    when:
      - Systemd.UnitInstalled("sshd.service") or Systemd.UnitInstalled("sshd.socket")
      - not Path.Exists("/var/log/auth.log")
    hub_spec:
      collections:
        - crowdsecurity/sshd
    acquisition_spec:
      filename: sshd.yaml
      datasource:
        source: journalctl
        labels:
          type: syslog
        journalctl_filter:
          - "_SYSTEMD_UNIT=sshd.service"

  # Suricata IDS/IPS
  suricata-systemd:
    when:
      - Systemd.UnitInstalled("suricata.service")
    hub_spec:
      collections:
        - crowdsecurity/suricata
    acquisition_spec:
      filename: suricata.yaml
      datasource:
        source: file
        labels:
          type: suricata-evelogs
        filenames:
          - /var/log/suricata/eve.json

  # vsftpd FTP server
  vsftpd-systemd:
    when:
      - Systemd.UnitInstalled("vsftpd.service")
    hub_spec:
      collections:
        - crowdsecurity/vsftpd
    acquisition_spec:
      filename: vsftpd.yaml
      datasource:
        source: file
        labels:
          type: vsftpd
        filenames:
          - /var/log/vsftpd/*.log

  # There is no standard systemd unit for telnetd, so
  # we rely on file detection only.
  telnet:
    when:
      - len(Path.Glob("/var/log/telnetd*.log")) > 0
    hub_spec:
      scenarios:
        - crowdsecurity/telnet-bf
    acquisition_spec:
      filename: telnet.yaml
      datasource:
        source: file
        labels:
          type: telnet
        filenames:
          - /var/log/telnetd*.log

  windows_iis:
    when:
      - Windows.ServiceEnabled("W3SVC")
    hub_spec:
      collections:
        - crowdsecurity/iis
    acquisition_spec:
      filename: iis.yaml
      datasource:
        source: file
        use_time_machine: true
        filenames:
          - C:\inetpub\logs\LogFiles\*\*.log
        labels:
          type: iis

  windows_sqlserver:
    when:
      - Windows.ServiceEnabled("MSSQLSERVER")
    hub_spec:
      collections:
        - crowdsecurity/mssql
    acquisition_spec:
      filename: mssql.yaml
      datasource:
        source: wineventlog
        event_channel: Application
        event_ids:
          - 18456
        event_level: information
        labels:
          type: eventlog
  #
  # Operating System detection
  #

  linux:
    when:
      - Host.OS == "linux"
    hub_spec:
      collections:
        - crowdsecurity/linux
    acquisition_spec:
      filename: linux.yaml
      datasource:
        source: file
        labels:
          type: syslog
        filenames:
          - /var/log/syslog
          - /var/log/kern.log
          - /var/log/messages

  freebsd:
    when:
      - Host.OS == "freebsd"
    hub_spec:
      collections:
        - crowdsecurity/freebsd

  windows:
    when:
      - Host.OS == "windows"
    hub_spec:
      collections:
        - crowdsecurity/windows
    acquisition_spec:
      filename: windows_auth.yaml
      datasource:
        source: wineventlog
        event_channel: Security
        event_ids:
          - 4625
          - 4623
        event_level: information
        labels:
          type: eventlog

  # anti-lockout
  whitelists:
    hub_spec:
      parsers:
        - crowdsecurity/whitelists

# ------------------------------------------------
# The following have not been extensively tested.
# Feedback is welcome.
# ------------------------------------------------

## Emby media server
#emby-systemd:
#  when:
#    - Systemd.UnitInstalled("emby-server.service")
#  hub_spec:
#    collections:
#      - LePresidente/emby
#  acquisition_spec:
#    filename: emby.yaml
#    datasource:
#      source: file
#      labels:
#        type: emby
#      filenames:
#        - /var/log/embyserver.txt

## Endlessh SSH tarpit
#endlessh-systemd:
#  when:
#    - Systemd.UnitInstalled("endlessh.service")
#  hub_spec:
#    collections:
#      - crowdsecurity/endlessh
#  acquisition_spec:
#    filename: endlessh.yaml
#    datasource:
#      source: journalctl
#      labels:
#        type: endlessh
#      # XXX this? or /var/log/syslog?
#      journalctl_filter:
#        - "_SYSTEMD_UNIT=endlessh.service"

## Odoo ERP
#odoo-systemd:
#  when:
#    - Systemd.UnitInstalled("odoo.service")
#  hub_spec:
#    collections:
#      - crowdsecurity/odoo
#  acquisition_spec:
#    filename: odoo.yaml
#    datasource:
#      source: file
#      labels:
#        type: odoo
#      filenames:
#        - /var/log/odoo/*.log

## This only works on deb-based systems. On other distributions, the
## application is run from the release tarball and the log location depends on
## the location it's run from.
#
## Ombi media request system
#ombi-systemd:
#  when:
#    - Systemd.UnitInstalled("ombi.service")
#    - Host.PlatformFamily == "debian"
#  hub_spec:
#    collections:
#      - LePresidente/ombi
#  acquisition_spec:
#    filename: ombi.yaml
#    datasource:
#      source: file
#      labels:
#        type: ombi
#      filenames:
#        - /var/log/ombi/log-*.txt
