name: Functional tests with MySQL

on:
  workflow_call:
    inputs:
      database_image:
        required: true
        type: string
    secrets:
      DATABASE_PASSWORD:
        required: true

jobs:
  build:
    name: "Build + tests"
    runs-on: ubuntu-latest
    timeout-minutes: 20
    services:
      database:
        image: ${{ inputs.database_image }}
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        ports:
          - 3306:3306
    steps:

    - name: "Force machineid"
      run: |
          sudo chmod +w /etc/machine-id
          echo githubciXXXXXXXXXXXXXXXXXXXXXXXX | sudo tee /etc/machine-id

    - name: "Set up Go 1.17"
      uses: actions/setup-go@v3
      with:
        go-version: 1.17
      id: go

    - name: "Clone CrowdSec"
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true

    - name: "Install bats dependencies"
      run: |
        sudo apt install -y -qq build-essential daemonize jq netcat-openbsd
        GO111MODULE=on go get github.com/mikefarah/yq/v4
        sudo cp -u ~/go/bin/yq /usr/local/bin/

    - name: "Build crowdsec and fixture"
      run: make bats-clean bats-build bats-fixture
      env:
        DB_BACKEND: mysql
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 3306
        MYSQL_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        MYSQL_USER: root

    - name: "Run tests"
      run: make bats-test
      env:
        DB_BACKEND: mysql
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 3306
        MYSQL_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        MYSQL_USER: root

    - name: "Show database logs"
      run: docker logs "${{ job.services.database.id }}"
      if: ${{ always() }}

