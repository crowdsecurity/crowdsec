name: Functional tests (MySQL)

on:
  workflow_call:
    inputs:
      database_image:
        required: true
        type: string

env:
  PREFIX_TEST_NAMES_WITH_FILE: true

jobs:
  build:
    strategy:
      matrix:
        go-version: ["1.20.1"]

    name: "Build + tests"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    services:
      database:
        image: ${{ inputs.database_image }}
        env:
          MYSQL_ROOT_PASSWORD: "secret"
        ports:
          - 3306:3306

    steps:

    - name: "Force machineid"
      run: |
          sudo chmod +w /etc/machine-id
          echo githubciXXXXXXXXXXXXXXXXXXXXXXXX | sudo tee /etc/machine-id

    - name: "Set up Go ${{ matrix.go-version }}"
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    - name: "Check out CrowdSec repository"
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-${{ matrix.go-version }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.go-version }}-go-

    - name: "Install bats dependencies"
      env:
        GOBIN: /usr/local/bin
      run: |
        sudo apt -qq -y -o=Dpkg::Use-Pty=0 install build-essential daemonize jq netcat-openbsd
        go install github.com/mikefarah/yq/v4@latest
        go install github.com/cloudflare/cfssl/cmd/cfssl@master
        go install github.com/cloudflare/cfssl/cmd/cfssljson@master

    - name: "Build crowdsec and fixture"
      run: |
        make clean bats-build bats-fixture
      env:
        DB_BACKEND: mysql
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 3306
        MYSQL_PASSWORD: "secret"
        MYSQL_USER: root

    - name: "Run tests"
      run: make bats-test
      env:
        DB_BACKEND: mysql
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 3306
        MYSQL_PASSWORD: "secret"
        MYSQL_USER: root

    #
    # In case you need to inspect the database status after the failure of a given test
    #
    # - name: "Run specified tests"
    #   run: ./test/run-tests test/bats/<filename>.bats -f "<test name>"

    - name: Show database dump
      run: ./test/instance-db dump /dev/fd/1
      env:
        DB_BACKEND: mysql
        MYSQL_HOST: 127.0.0.1
        MYSQL_PORT: 3306
        MYSQL_PASSWORD: "secret"
        MYSQL_USER: root
      if: ${{ always() }}

    - name: "Show stack traces"
      run: for file in $(find /tmp/crowdsec-crash.*.txt); do echo ">>>>> $file"; cat $file; echo; done
      if: ${{ always() }}

    - name: "Show crowdsec logs"
      run: for file in $(find ./test/local/var/log -type f); do echo ">>>>> $file"; cat $file; echo; done
      if: ${{ always() }}

    - name: "Show database logs"
      run: docker logs "${{ job.services.database.id }}"
      if: ${{ always() }}
