name: Functional tests (sqlite)

on:
  workflow_call:

env:
  PREFIX_TEST_NAMES_WITH_FILE: true
  TEST_COVERAGE: true

jobs:

  build:
    name: "Build + tests"
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:

    - name: "Force machineid"
      run: |
          sudo chmod +w /etc/machine-id
          echo githubciXXXXXXXXXXXXXXXXXXXXXXXX | sudo tee /etc/machine-id

    - name: "Set up Go 1.19"
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
      id: go

    - name: "Check out CrowdSec repository"
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true

    - name: "Install bats dependencies"
      run: |
        sudo apt -qq -y -o=Dpkg::Use-Pty=0 install build-essential daemonize jq netcat-openbsd
        go install github.com/mikefarah/yq/v4@latest
        go install github.com/cloudflare/cfssl/cmd/cfssl@master
        go install github.com/cloudflare/cfssl/cmd/cfssljson@master
        sudo cp -u ~/go/bin/yq ~/go/bin/cfssl ~/go/bin/cfssljson /usr/local/bin/
        go install github.com/wadey/gocovmerge@latest
        sudo cp -u ~/go/bin/gocovmerge /usr/local/bin/

    - name: "Build crowdsec and fixture"
      run: |
        make clean bats-build bats-fixture

    - name: "Run tests"
      run: make bats-test

    #
    # In case you need to inspect the database status after the failure of a given test
    #
    # - name: "Run specified tests"
    #   run: ./tests/run-tests tests/bats/<filename>.bats -f "<test name>"

    - name: "Show database dump"
      run: |
        ./tests/instance-crowdsec stop
        sqlite3 ./tests/local/var/lib/crowdsec/data/crowdsec.db '.dump'
      if: ${{ always() }}

    - name: "Show crowdsec logs"
      run:
        for file in $(find ./tests/local/var/log -type f); do echo ">>>>> $file"; cat $file; echo; done
      if: ${{ always() }}

    - name: Upload crowdsec coverage to codecov
      uses: codecov/codecov-action@v2
      with:
        files: ./tests/local/var/lib/coverage/coverage-crowdsec.out
        flags: func-crowdsec

    - name: Upload cscli coverage to codecov
      uses: codecov/codecov-action@v2
      with:
        files: ./tests/local/var/lib/coverage/coverage-cscli.out
        flags: func-cscli
